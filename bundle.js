/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/style/main.css":
/*!****************************!*\
  !*** ./src/style/main.css ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://project_to-do_list/./src/style/main.css?");

/***/ }),

/***/ "./src/script/Classes/APIClass.js":
/*!****************************************!*\
  !*** ./src/script/Classes/APIClass.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"request\": () => (/* binding */ request)\n/* harmony export */ });\n/* harmony import */ var _ModalClass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ModalClass.js */ \"./src/script/Classes/ModalClass.js\");\n\r\nclass RequestApi {\r\n  preloader(show) {\r\n    if (show) {\r\n      document.getElementById(\"preloader\").style.display = \"block\";\r\n    } else {\r\n      document.getElementById(\"preloader\").style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  post = async (options) => {\r\n    const { endpoint, body } = options;\r\n    try {\r\n      this.preloader(true);\r\n      const submitButton = document.getElementById(\"submit-button\");\r\n      if (submitButton) {\r\n        submitButton.setAttribute(\"disabled\", \"\");\r\n      }\r\n      let headers = {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      };\r\n      if (this.tokenAuthorization) {\r\n        headers = {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          Authorization: `Bearer ${this.tokenAuthorization}`,\r\n        };\r\n      }\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: JSON.stringify(body),\r\n      });\r\n      const resultRequest = await response.json();\r\n      if (response.ok) {\r\n        if (resultRequest.token) {\r\n          this.tokenAuthorization = resultRequest.token;\r\n        }\r\n        if (resultRequest._id) {\r\n          this.cardAddId = resultRequest._id;\r\n        }\r\n        this.preloader(false);\r\n        if (submitButton) {\r\n          submitButton.removeAttribute(\"disabled\");\r\n        }\r\n      } else {\r\n        this.preloader(false);\r\n        if (submitButton) {\r\n          submitButton.removeAttribute(\"disabled\");\r\n        }\r\n        for (let error in resultRequest) {\r\n          throw new Error(resultRequest[error]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.preloader(false);\r\n      const errorMessage = new _ModalClass_js__WEBPACK_IMPORTED_MODULE_0__.ModalWindowError(error.message);\r\n      errorMessage.renderWindowError();\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  get = async (options) => {\r\n    const { endpoint, token } = options;\r\n    this.tokenAuthorization = token;\r\n    try {\r\n      this.preloader(true);\r\n      const response = await fetch(endpoint, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          Authorization: `Bearer ${this.tokenAuthorization}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        this.preloader(false);\r\n        const resultRequest = await response.json();\r\n        this.resultGetRequest = resultRequest;\r\n      } else {\r\n        this.preloader(false);\r\n        throw new Error(`There was an error code ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      this.preloader(false);\r\n      const errorMessage = new _ModalClass_js__WEBPACK_IMPORTED_MODULE_0__.ModalWindowError(error.message);\r\n      errorMessage.renderWindowError();\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  delete = async (options) => {\r\n    const { endpoint, token } = options;\r\n    this.tokenAuthorization = token;\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          Authorization: `Bearer ${this.tokenAuthorization}`,\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`There was an error code ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = new _ModalClass_js__WEBPACK_IMPORTED_MODULE_0__.ModalWindowError(error.message);\r\n      errorMessage.renderWindowError();\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  patch = async (options) => {\r\n    const { endpoint, body, token } = options;\r\n    this.tokenAuthorization = token;\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n          Authorization: `Bearer ${this.tokenAuthorization}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`There was an error code ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = new _ModalClass_js__WEBPACK_IMPORTED_MODULE_0__.ModalWindowError(error.message);\r\n      errorMessage.renderWindowError();\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n}\r\n\r\nconst request = new RequestApi();\r\n\n\n//# sourceURL=webpack://project_to-do_list/./src/script/Classes/APIClass.js?");

/***/ }),

/***/ "./src/script/Classes/FormClass.js":
/*!*****************************************!*\
  !*** ./src/script/Classes/FormClass.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Form\": () => (/* binding */ Form)\n/* harmony export */ });\n/* harmony import */ var _APIClass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./APIClass.js */ \"./src/script/Classes/APIClass.js\");\n/* harmony import */ var _ModalClass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ModalClass.js */ \"./src/script/Classes/ModalClass.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"./src/script/index.js\");\n\r\n\r\n\r\nclass Form {\r\n  constructor(options) {\r\n    const { inputEmail, inputName, inputPassword, inputPassSwitch } = options;\r\n    this.inputEmail = inputEmail;\r\n    this.inputName = inputName;\r\n    this.inputPassword = inputPassword;\r\n    this.inputPassSwitch = inputPassSwitch;\r\n    this.isActiveRegister = false;\r\n    this.formContainer = document.body.querySelector(\".toDo-list\");\r\n  }\r\n\r\n  renderLoginOrRegisterForm(container) {\r\n    const formContainer = document.createElement(\"div\");\r\n    formContainer.classList.add(\"toDo-list__form-container\");\r\n\r\n    const form = document.createElement(\"form\");\r\n    form.classList.add(\"toDo-list__form\");\r\n\r\n    const formHeaderContainer = document.createElement(\"div\");\r\n    formHeaderContainer.classList.add(\"toDo-list__form-select\");\r\n    const formHeaderLogin = document.createElement(\"p\");\r\n    formHeaderLogin.innerText = \"Login\";\r\n    const formHeaderRegister = document.createElement(\"p\");\r\n    formHeaderRegister.innerText = \"Register\";\r\n    formHeaderContainer.append(formHeaderLogin, formHeaderRegister);\r\n    form.append(formHeaderContainer);\r\n\r\n    this.inputEmail.createInput(form);\r\n\r\n    if (this.isActiveRegister) {\r\n      this.inputName.createInput(form);\r\n      formHeaderRegister.classList.add(\"bold\");\r\n    } else {\r\n      formHeaderLogin.classList.add(\"bold\");\r\n    }\r\n\r\n    this.inputPassword.createInput(form);\r\n\r\n    this.inputPassSwitch.createCheckbox(form);\r\n\r\n    const button = document.createElement(\"button\");\r\n    button.setAttribute(\"type\", \"submit\");\r\n    button.innerText = \"Submit\";\r\n    button.id = \"submit-button\";\r\n\r\n    form.append(button);\r\n\r\n    formContainer.append(form);\r\n    formContainer.classList.add(\"set-opacity\");\r\n    container.append(formContainer);\r\n\r\n    formHeaderLogin.addEventListener(\"click\", () => {\r\n      this.formContainer.innerHTML = \"\";\r\n      this.isActiveRegister = false;\r\n      this.renderLoginOrRegisterForm(this.formContainer);\r\n    });\r\n    formHeaderRegister.addEventListener(\"click\", () => {\r\n      this.formContainer.innerHTML = \"\";\r\n      this.isActiveRegister = true;\r\n      this.renderLoginOrRegisterForm(this.formContainer);\r\n    });\r\n\r\n    this.loginOrRegisterUser(form);\r\n  }\r\n\r\n  inputsValidation() {\r\n    const name = document.getElementById(\"input_name\");\r\n    const email = document.getElementById(\"input_email\");\r\n    const password = document.getElementById(\"input_password\");\r\n    const NAME_REGEX = /^(?=.{1,20}$)(?![_.])[a-zA-Z0-9._]+[^._]$/;\r\n    const EMAIL_REGEX =\r\n      /([-!#-'*+/-9=?A-Z^-~]+(\\.[-!#-'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\")@[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?(\\.[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?)+/gm;\r\n    const PASS_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\r\n    let isEmailValid = EMAIL_REGEX.test(email.value.trim());\r\n    let isPasswordValid = PASS_REGEX.test(password.value.trim());\r\n    let isNameValid = true;\r\n    if (!name) {\r\n      this.isInputDataValid = isEmailValid && isPasswordValid;\r\n    } else {\r\n      isNameValid = NAME_REGEX.test(name.value.trim());\r\n      this.isInputDataValid = isNameValid && isEmailValid && isPasswordValid;\r\n    }\r\n\r\n    const errorsInputs = document.querySelectorAll(\".error-red-background\");\r\n    if (errorsInputs.length > 0) {\r\n      errorsInputs.forEach((node) => {\r\n        node.classList.remove(\"error-red-background\");\r\n        document\r\n          .getElementById(`tooltip_${node.id}`)\r\n          .setAttribute(\"hidden\", \"\");\r\n      });\r\n    }\r\n\r\n    if (!this.isInputDataValid) {\r\n      let invalidInputData = { isNameValid, isEmailValid, isPasswordValid };\r\n      for (let inputValue in invalidInputData) {\r\n        if (!invalidInputData[inputValue]) {\r\n          switch (inputValue) {\r\n            case \"isNameValid\":\r\n              document\r\n                .getElementById(\"tooltip_input_name\")\r\n                .removeAttribute(\"hidden\");\r\n              document\r\n                .getElementById(\"input_name\")\r\n                .classList.add(\"error-red-background\");\r\n              break;\r\n            case \"isEmailValid\":\r\n              document\r\n                .getElementById(\"tooltip_input_email\")\r\n                .removeAttribute(\"hidden\");\r\n              document\r\n                .getElementById(\"input_email\")\r\n                .classList.add(\"error-red-background\");\r\n              break;\r\n            case \"isPasswordValid\":\r\n              document\r\n                .getElementById(\"tooltip_input_password\")\r\n                .removeAttribute(\"hidden\");\r\n              document\r\n                .getElementById(\"input_password\")\r\n                .classList.add(\"error-red-background\");\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  loginOrRegisterUser(form) {\r\n    const handleFormSubmit = async (event) => {\r\n      const formData = new FormData(event.target);\r\n      event.target.reset();\r\n\r\n      let currentInputs = document.querySelectorAll(\".toDo-list__form-input\");\r\n      currentInputs.forEach((input) => {\r\n        input.nextElementSibling.setAttribute(\"hidden\", \"\");\r\n      });\r\n\r\n      const convertFormDataToObject = (formData) => {\r\n        const formValues = {};\r\n        for (let pair of formData.entries()) {\r\n          formValues[pair[0]] = pair[1].trim();\r\n        }\r\n        return formValues;\r\n      };\r\n\r\n      const resultSubmit = convertFormDataToObject(formData);\r\n      const {\r\n        input_email: email,\r\n        input_name: name,\r\n        input_password: password,\r\n      } = resultSubmit;\r\n\r\n      if (this.isActiveRegister) {\r\n        const endpointToRegister =\r\n          \"https://byte-tasks.herokuapp.com/api/auth/register\";\r\n        const bodyRegister = { email, name, password };\r\n        await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.post({\r\n          endpoint: endpointToRegister,\r\n          body: bodyRegister,\r\n        });\r\n        this.isActiveRegister = false;\r\n        this.formContainer.innerHTML = \"\";\r\n        this.renderLoginOrRegisterForm(this.formContainer);\r\n\r\n        const message = new _ModalClass_js__WEBPACK_IMPORTED_MODULE_1__.ModalWindowMessage();\r\n        message.renderWindowMessage();\r\n      } else {\r\n        const endpointToLogin =\r\n          \"https://byte-tasks.herokuapp.com/api/auth/login\";\r\n        const bodyLogin = { email, password };\r\n        await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.post({\r\n          endpoint: endpointToLogin,\r\n          body: bodyLogin,\r\n        });\r\n        this.tokenAuthorization = _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization;\r\n        this.getLogoutInHeader(this.tokenAuthorization);\r\n        sessionStorage.setItem(\r\n          \"authorizedUser\",\r\n          JSON.stringify({ email, password })\r\n        );\r\n        this.formContainer.innerHTML = \"\";\r\n      }\r\n    };\r\n    form.addEventListener(\"submit\", async (event) => {\r\n      event.preventDefault();\r\n\r\n      this.inputsValidation();\r\n\r\n      if (this.isInputDataValid) {\r\n        await handleFormSubmit(event);\r\n        if (this.tokenAuthorization) {\r\n          (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.renderTaskUI)(this.formContainer);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  async sessionAuthorization() {\r\n    const authorizedUser = JSON.parse(sessionStorage.getItem(\"authorizedUser\"));\r\n    const { email, password } = authorizedUser;\r\n    const endpointToLogin = \"https://byte-tasks.herokuapp.com/api/auth/login\";\r\n    const bodyLogin = { email, password };\r\n    await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.post({\r\n      endpoint: endpointToLogin,\r\n      body: bodyLogin,\r\n    });\r\n    this.tokenAuthorization = _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization;\r\n    this.getLogoutInHeader(this.tokenAuthorization);\r\n    this.formContainer.innerHTML = \"\";\r\n  }\r\n\r\n  async getLogoutInHeader(tokenAuthorization) {\r\n    await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.get({\r\n      endpoint: \"https://byte-tasks.herokuapp.com/api/auth/user/self\",\r\n      token: tokenAuthorization,\r\n    });\r\n    const logoutContainer = document.createElement(\"div\");\r\n    logoutContainer.classList.add(\"header-logout-container\");\r\n    const logoutButton = document.createElement(\"button\");\r\n    logoutButton.innerText = \"LOGOUT\";\r\n    const username = document.createElement(\"p\");\r\n    username.innerText = _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.resultGetRequest.name;\r\n\r\n    logoutButton.addEventListener(\"click\", () => {\r\n      logoutContainer.remove();\r\n      document.getElementById(\"taskform-container\").remove();\r\n      document.getElementById(\"taskcards-container\").remove();\r\n      sessionStorage.removeItem(\"authorizedUser\");\r\n\r\n      (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.userAuthorization)();\r\n    });\r\n\r\n    logoutContainer.append(logoutButton, username);\r\n    document.querySelector(\".header\").append(logoutContainer);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://project_to-do_list/./src/script/Classes/FormClass.js?");

/***/ }),

/***/ "./src/script/Classes/InputClass.js":
/*!******************************************!*\
  !*** ./src/script/Classes/InputClass.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Input\": () => (/* binding */ Input)\n/* harmony export */ });\nclass Input {\r\n    constructor (options) {\r\n        const {\r\n            name,\r\n            placeholder,\r\n            label,\r\n            type = \"text\",\r\n            isInputRequired = true,\r\n            styleClass,\r\n            toolTipText,\r\n        } = options;\r\n        this.name = name;\r\n        this.placeholder = placeholder;\r\n        this.label = label;\r\n        this.type = type;\r\n        this.isInputRequired = isInputRequired;\r\n        this.styleClass = styleClass;\r\n        this.toolTipText = toolTipText;\r\n    }\r\n    \r\n    createInput (container) {\r\n        const input = document.createElement(\"input\");\r\n        input.setAttribute(\"placeholder\", this.placeholder);\r\n        input.setAttribute(\"type\", this.type);\r\n        input.setAttribute(\"name\", this.name);\r\n        if (this.type === \"password\") {\r\n            input.setAttribute(\"autocomplete\", \"off\");\r\n        }\r\n        input.classList.add(this.styleClass);\r\n        input.id = this.name;\r\n        if (this.isInputRequired) {\r\n            input.setAttribute(\"required\", \"\");\r\n        }\r\n\r\n        const label = document.createElement(\"label\");\r\n        label.setAttribute(\"for\", this.name);\r\n        label.innerText = this.label;\r\n\r\n        if (this.toolTipText) {\r\n            const toolTip = document.createElement(\"p\");\r\n            toolTip.innerText = this.toolTipText;\r\n            toolTip.id = `tooltip_${this.name}`;\r\n            toolTip.setAttribute(\"hidden\", \"\");\r\n            label.append(toolTip);\r\n        }\r\n        container.append(label, input);\r\n    }\r\n\r\n    createCheckbox (container) {\r\n        \r\n        const passCheckboxWrapper = document.createElement(\"div\");\r\n        passCheckboxWrapper.classList.add(\"toDo-list__form-checkbox-container\")\r\n        const passCheckboxContainer = document.createElement(\"div\");\r\n        const hiddenParagraph = document.createElement(\"p\");\r\n        hiddenParagraph.innerText = \"hide\";\r\n        const showedParagraph = document.createElement(\"p\");\r\n        showedParagraph.innerText = \"show\";\r\n        passCheckboxContainer.classList.add(\"toDo-list__form-checkbox\")\r\n        const passSwitchCheckbox = document.createElement(\"input\");\r\n        passSwitchCheckbox.id = this.name;\r\n        passSwitchCheckbox.setAttribute(\"type\", this.type);\r\n        passSwitchCheckbox.classList.add(\"toDo-list__form-checkbox-input\");\r\n        passSwitchCheckbox.checked = false;\r\n        const checkboxSpan = document.createElement(\"span\");\r\n        const passCheckboxLabel = document.createElement(\"label\");\r\n        passCheckboxLabel.classList.add(\"toDo-list__form-checkbox-label\")\r\n        passCheckboxLabel.setAttribute(\"for\", this.name);\r\n\r\n        passSwitchCheckbox.addEventListener(\"change\", ()=> {\r\n            const inputPassword = document.getElementById(\"input_password\");\r\n            passSwitchCheckbox.checked ? inputPassword.setAttribute(\"type\", \"text\") : inputPassword.setAttribute(\"type\", \"password\");\r\n        });\r\n        passCheckboxContainer.append(passSwitchCheckbox, checkboxSpan, passCheckboxLabel);\r\n        passCheckboxWrapper.append(hiddenParagraph, passCheckboxContainer, showedParagraph);\r\n\r\n        container.append(passCheckboxWrapper);\r\n    }\r\n}\n\n//# sourceURL=webpack://project_to-do_list/./src/script/Classes/InputClass.js?");

/***/ }),

/***/ "./src/script/Classes/ModalClass.js":
/*!******************************************!*\
  !*** ./src/script/Classes/ModalClass.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ModalWindowError\": () => (/* binding */ ModalWindowError),\n/* harmony export */   \"ModalWindowMessage\": () => (/* binding */ ModalWindowMessage)\n/* harmony export */ });\nclass ModalWindow {\r\n  renderWindow() {\r\n    const modalContainer = document.createElement(\"div\");\r\n    modalContainer.classList.add(\"modal-container\");\r\n    const window = document.createElement(\"div\");\r\n    window.classList.add(\"modal-window\");\r\n    const title = document.createElement(\"p\");\r\n    title.classList.add(\"modal-title\");\r\n    title.id = \"modal-title-message\";\r\n    window.append(title);\r\n    const containerForMessage = document.createElement(\"div\");\r\n    containerForMessage.id = \"modal-text-message\";\r\n    const buttonModal = document.createElement(\"button\");\r\n    buttonModal.innerText = \"OK\";\r\n    const buttonContainer = document.createElement(\"div\");\r\n    buttonContainer.classList.add(\"button-modal-container\");\r\n    buttonContainer.append(buttonModal);\r\n    window.append(containerForMessage, buttonContainer);\r\n    modalContainer.append(window);\r\n\r\n    buttonModal.addEventListener(\"click\", () => {\r\n      modalContainer.remove();\r\n    });\r\n    const form = document.querySelector(\".toDo-list__form-container\");\r\n    const generalAppContainer = document.querySelector(\".toDo-list\");\r\n\r\n    (form || generalAppContainer).append(modalContainer);\r\n\r\n    if (!form) window.classList.add(\"modal-window--cards\");\r\n  }\r\n}\r\n\r\nclass ModalWindowError extends ModalWindow {\r\n  constructor(resultRequest) {\r\n    super();\r\n    this.resultRequest = resultRequest;\r\n  }\r\n  renderWindowError() {\r\n    super.renderWindow();\r\n    document.getElementById(\"modal-title-message\").innerText =\r\n      \"There was an error:\";\r\n    const textError = document.createElement(\"p\");\r\n    textError.classList.add(\"modal-text-error\");\r\n    textError.innerText = this.resultRequest;\r\n    document.getElementById(\"modal-text-message\").append(textError);\r\n  }\r\n}\r\n\r\nclass ModalWindowMessage extends ModalWindow {\r\n  renderWindowMessage() {\r\n    super.renderWindow();\r\n    document.getElementById(\"modal-title-message\").innerText =\r\n      \"Successfully registration! Now you must log in.\";\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://project_to-do_list/./src/script/Classes/ModalClass.js?");

/***/ }),

/***/ "./src/script/Classes/TaskClass.js":
/*!*****************************************!*\
  !*** ./src/script/Classes/TaskClass.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Task\": () => (/* binding */ Task)\n/* harmony export */ });\n/* harmony import */ var _APIClass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./APIClass.js */ \"./src/script/Classes/APIClass.js\");\n\r\nclass Task {\r\n  constructor(options) {\r\n    const { inputTaskName, inputTaskDescription } = options;\r\n    this.inputTaskName = inputTaskName;\r\n    this.inputTaskDescription = inputTaskDescription;\r\n    this.baseEndpointTask = \"https://byte-tasks.herokuapp.com/api/task/\";\r\n  }\r\n\r\n  async renderTaskForm(container) {\r\n    const taskFormContainer = document.createElement(\"div\");\r\n    taskFormContainer.classList.add(\"toDo-list__taskform-container\");\r\n    taskFormContainer.id = \"taskform-container\";\r\n    const taskForm = document.createElement(\"form\");\r\n\r\n    this.inputTaskName.createInput(taskForm);\r\n    this.inputTaskDescription.createInput(taskForm);\r\n\r\n    const button = document.createElement(\"button\");\r\n    button.innerText = \"ADD\";\r\n    button.id = \"submit-button\";\r\n    taskForm.append(button);\r\n    taskFormContainer.append(taskForm);\r\n    taskFormContainer.classList.add(\"set-opacity\");\r\n    container.append(taskFormContainer);\r\n\r\n    taskForm.addEventListener(\"submit\", (event) => {\r\n      event.preventDefault();\r\n      const formData = new FormData(event.target);\r\n      event.target.reset();\r\n\r\n      this.submitTaskForm(formData);\r\n    });\r\n\r\n    const cardsContainer = document.createElement(\"div\");\r\n    cardsContainer.classList.add(\"toDo-list__taskcards-container\");\r\n    cardsContainer.id = \"taskcards-container\";\r\n    container.append(cardsContainer);\r\n\r\n    await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.get({\r\n      endpoint: this.baseEndpointTask,\r\n      token: _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization,\r\n    });\r\n\r\n    this.renderAllCards(_APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.resultGetRequest);\r\n  }\r\n\r\n  async submitTaskForm(formData) {\r\n    const convertFormDataToObject = (formData) => {\r\n      const formValues = {};\r\n      for (let pair of formData.entries()) {\r\n        formValues[pair[0]] = pair[1].trim();\r\n      }\r\n      return formValues;\r\n    };\r\n    const resultSubmit = convertFormDataToObject(formData);\r\n    let { input_task_name: name, input_task_description: description } =\r\n      resultSubmit;\r\n    if (!description) {\r\n      description = \"No description.\";\r\n    }\r\n    let endpoint = this.baseEndpointTask;\r\n    const bodyAddTask = {\r\n      name,\r\n      description,\r\n    };\r\n\r\n    await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.post({\r\n      endpoint: endpoint,\r\n      body: bodyAddTask,\r\n    });\r\n\r\n    endpoint = `${this.baseEndpointTask}${_APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.cardAddId}`;\r\n\r\n    await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.get({\r\n      endpoint: endpoint,\r\n      token: _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization,\r\n    });\r\n\r\n    this.renderNewCard(_APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.resultGetRequest);\r\n  }\r\n\r\n  getDateCreated(dateCreate) {\r\n    let dateCreateArr = dateCreate.split(\"T\");\r\n    let dateArr = dateCreateArr[0].split(\"-\");\r\n    let dateToCard = `${dateArr[2]}/${dateArr[1]}/${dateArr[0]}`;\r\n    let time = dateCreateArr[1].slice(0, 8);\r\n    let timeArr = time.split(\":\");\r\n    let timeToCard = \"\";\r\n    if (+timeArr[0] < 12) {\r\n      timeToCard = `${time} AM`;\r\n    } else {\r\n      timeToCard = `${+timeArr[0] - 12}:${timeArr[1]}:${timeArr[2]} PM`;\r\n    }\r\n    return `${dateToCard} ${timeToCard}`;\r\n  }\r\n\r\n  getTimeTracking(timeSeconds) {\r\n    let savedTimeSeconds = Math.round(+timeSeconds / 1000);\r\n    const checkLength = (data) => {\r\n      if (data < 10) {\r\n        return `0${data}`;\r\n      } else {\r\n        return `${data}`;\r\n      }\r\n    };\r\n    let hours = checkLength(Math.floor(savedTimeSeconds / 3600));\r\n    let minutes = checkLength(\r\n      Math.floor((savedTimeSeconds - hours * 3600) / 60)\r\n    );\r\n    let seconds = checkLength(savedTimeSeconds % 60);\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  renderAllCards(cardsData) {\r\n    for (let i = 0; i < cardsData.length; i++) {\r\n      this.renderNewCard(cardsData[i]);\r\n    }\r\n  }\r\n\r\n  renderNewCard(cardsData) {\r\n    const cardWrapper = document.createElement(\"div\");\r\n    cardWrapper.classList.add(\"toDo-list__taskcard\");\r\n    cardWrapper.id = cardsData._id;\r\n    if (cardsData.isFinished) {\r\n      cardWrapper.classList.toggle(\"toggle-done-task\");\r\n    }\r\n\r\n    const cardName = document.createElement(\"h4\");\r\n    cardName.classList.add(\"toDo-list__taskcard-name\");\r\n    cardName.innerText = cardsData.name;\r\n\r\n    const cardDescription = document.createElement(\"p\");\r\n    cardDescription.classList = \"toDo-list__taskcard-description\";\r\n    cardDescription.innerText = cardsData.description;\r\n\r\n    const timeTrackedWrapper = document.createElement(\"div\");\r\n    timeTrackedWrapper.classList.add(\"toDo-list__taskcard-checkbox-container\");\r\n    const checkboxTimeTracked = document.createElement(\"input\");\r\n    checkboxTimeTracked.setAttribute(\"type\", \"checkbox\");\r\n    checkboxTimeTracked.classList.add(\"toDo-list__taskcard-checkbox\");\r\n    const checkboxWrapper = document.createElement(\"div\");\r\n    checkboxWrapper.classList.add(\"toDo-list__taskcard-checkbox-wrapper\");\r\n    const checkboxCheck1 = document.createElement(\"div\");\r\n    const checkboxCheck2 = document.createElement(\"div\");\r\n    const timeTracker = document.createElement(\"p\");\r\n    timeTracker.classList.add(\"toDo-list__taskcard-time\");\r\n    timeTracker.innerText = this.getTimeTracking(cardsData.timeTracked);\r\n    if (cardsData.isActive) {\r\n      checkboxTimeTracked.checked = true;\r\n    }\r\n    checkboxWrapper.append(checkboxCheck1, checkboxCheck2);\r\n    timeTrackedWrapper.append(\r\n      checkboxTimeTracked,\r\n      checkboxWrapper,\r\n      timeTracker\r\n    );\r\n\r\n    const dateCreate = document.createElement(\"p\");\r\n    dateCreate.classList.add(\"toDo-list__taskcard-date\");\r\n    dateCreate.innerText = this.getDateCreated(cardsData.createdAt);\r\n\r\n    const doneButton = document.createElement(\"button\");\r\n    doneButton.classList.add(\"toDo-list__taskcard-btn\");\r\n    const innerText = cardsData.isFinished ? \"Restart\" : \"Mark as done\";\r\n    doneButton.innerText = innerText;\r\n    if (cardsData.isFinished) {\r\n      checkboxTimeTracked.setAttribute(\"disabled\", \"\");\r\n      checkboxWrapper.classList.add(\r\n        \"toDo-list__taskcard-checkbox-wrapper-grey\"\r\n      );\r\n    }\r\n\r\n    const deleteTaskBtn = document.createElement(\"p\");\r\n    deleteTaskBtn.classList.add(\"toDo-list__taskcard-close\");\r\n    deleteTaskBtn.innerText = \"X\";\r\n\r\n    this.setTimeTracking({\r\n      checkboxTimeTracked,\r\n      timeTracker,\r\n      cardsData,\r\n    });\r\n\r\n    this.doneOrRestartCard({\r\n      doneButton,\r\n      cardWrapper,\r\n      checkboxTimeTracked,\r\n      checkboxWrapper,\r\n      timeTracker,\r\n      cardsData,\r\n    });\r\n\r\n    this.deleteCard({\r\n      deleteTaskBtn,\r\n      cardWrapper,\r\n      cardsData,\r\n    });\r\n\r\n    cardWrapper.append(\r\n      cardName,\r\n      cardDescription,\r\n      timeTrackedWrapper,\r\n      dateCreate,\r\n      doneButton,\r\n      deleteTaskBtn\r\n    );\r\n    document.getElementById(\"taskcards-container\").append(cardWrapper);\r\n    cardWrapper.classList.add(\"set-opacity\");\r\n  }\r\n\r\n  async setTimeTracking(options) {\r\n    const { checkboxTimeTracked, timeTracker, cardsData } = options;\r\n    let currentIntervalId = null;\r\n    const runTimer = async () => {\r\n      await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.get({\r\n        endpoint: `${this.baseEndpointTask}${cardsData._id}`,\r\n        token: _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization,\r\n      });\r\n      if (checkboxTimeTracked.checked) {\r\n        let currentTimeSeconds = _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.resultGetRequest.timeTracked;\r\n        currentIntervalId = setInterval(() => {\r\n          if (!timeTracker.hasAttribute(\"finishedTask\")) {\r\n            currentTimeSeconds += 1000;\r\n            timeTracker.innerText = this.getTimeTracking(currentTimeSeconds);\r\n          } else {\r\n            clearInterval(currentIntervalId);\r\n          }\r\n        }, 1000);\r\n      } else {\r\n        clearInterval(currentIntervalId);\r\n      }\r\n    };\r\n    runTimer();\r\n    checkboxTimeTracked.addEventListener(\"change\", async () => {\r\n      let bodyPatchRequest = {};\r\n      if (checkboxTimeTracked.checked) {\r\n        bodyPatchRequest = {\r\n          isActive: true,\r\n        };\r\n      } else {\r\n        bodyPatchRequest = {\r\n          isActive: false,\r\n        };\r\n      }\r\n      await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.patch({\r\n        endpoint: `${this.baseEndpointTask}${cardsData._id}`,\r\n        body: bodyPatchRequest,\r\n        token: _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization,\r\n      });\r\n      runTimer();\r\n    });\r\n  }\r\n\r\n  doneOrRestartCard(options) {\r\n    const {\r\n      doneButton,\r\n      cardWrapper,\r\n      checkboxTimeTracked,\r\n      checkboxWrapper,\r\n      timeTracker,\r\n      cardsData,\r\n    } = options;\r\n\r\n    doneButton.addEventListener(\"click\", async (event) => {\r\n      event.preventDefault();\r\n      let bodyRequest = {};\r\n      if (event.target.textContent !== \"Restart\") {\r\n        doneButton.innerText = \"Restart\";\r\n        bodyRequest = {\r\n          isActive: false,\r\n          isFinished: true,\r\n        };\r\n        cardWrapper.classList.toggle(\"toggle-done-task\");\r\n        checkboxTimeTracked.checked = false;\r\n        checkboxTimeTracked.setAttribute(\"disabled\", \"\");\r\n        timeTracker.setAttribute(\"finishedTask\", \"\");\r\n        checkboxWrapper.classList.add(\r\n          \"toDo-list__taskcard-checkbox-wrapper-grey\"\r\n        );\r\n      } else {\r\n        doneButton.innerText = \"Mark as done\";\r\n        bodyRequest = {\r\n          isFinished: false,\r\n          timeTracked: 0,\r\n        };\r\n        timeTracker.innerText = \"00:00:00\";\r\n        cardWrapper.classList.toggle(\"toggle-done-task\");\r\n        timeTracker.removeAttribute(\"finishedTask\");\r\n        checkboxTimeTracked.removeAttribute(\"disabled\");\r\n        checkboxWrapper.classList.remove(\r\n          \"toDo-list__taskcard-checkbox-wrapper-grey\"\r\n        );\r\n      }\r\n      await _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.patch({\r\n        endpoint: `${this.baseEndpointTask}${cardsData._id}`,\r\n        body: bodyRequest,\r\n        token: _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization,\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteCard(options) {\r\n    const { deleteTaskBtn, cardWrapper, cardsData } = options;\r\n    deleteTaskBtn.addEventListener(\"click\", () => {\r\n      cardWrapper.classList.add(\"remove-opacity\");\r\n      setTimeout(() => {\r\n        cardWrapper.remove();\r\n      }, 1500);\r\n      _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request[\"delete\"]({\r\n        endpoint: `${this.baseEndpointTask}${cardsData._id}`,\r\n        token: _APIClass_js__WEBPACK_IMPORTED_MODULE_0__.request.tokenAuthorization,\r\n      });\r\n    });\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://project_to-do_list/./src/script/Classes/TaskClass.js?");

/***/ }),

/***/ "./src/script/Classes/inputsConfig.js":
/*!********************************************!*\
  !*** ./src/script/Classes/inputsConfig.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inputsConfig\": () => (/* binding */ inputsConfig)\n/* harmony export */ });\nconst inputsConfig = {\r\n  name: {\r\n    name: \"input_name\",\r\n    placeholder: \"enter your name\",\r\n    label: \"Name\",\r\n    styleClass: \"toDo-list__form-input\",\r\n    toolTipText:\r\n      'name must be in English, 2-20 characters long, only letters and numbers, no \"_\" or \".\" at the beginning or at the end',\r\n  },\r\n\r\n  password: {\r\n    name: \"input_password\",\r\n    placeholder: \"enter your password\",\r\n    label: \"Password\",\r\n    type: \"password\",\r\n    styleClass: \"toDo-list__form-input\",\r\n    toolTipText:\r\n      \"password must be in English, minimum 8 characters, one uppercase letter, one lowercase letter and one number\",\r\n  },\r\n\r\n  email: {\r\n    name: \"input_email\",\r\n    placeholder: \"enter your email\",\r\n    label: \"Email\",\r\n    styleClass: \"toDo-list__form-input\",\r\n    toolTipText: \"email format - username@example.com\",\r\n  },\r\n\r\n  inputPassSwitch: {\r\n    name: \"pass-checkbox\",\r\n    type: \"checkbox\",\r\n    isInputRequired: false,\r\n  },\r\n\r\n  taskName: {\r\n    name: \"input_task_name\",\r\n    placeholder: \"enter name of your task\",\r\n    label: \"Task name\",\r\n    styleClass: \"toDo-list__form-task-input\",\r\n  },\r\n\r\n  taskDescription: {\r\n    name: \"input_task_description\",\r\n    placeholder: \"enter your description\",\r\n    label: \"Task description\",\r\n    styleClass: \"toDo-list__form-task-input\",\r\n    isInputRequired: false,\r\n  },\r\n};\r\n\n\n//# sourceURL=webpack://project_to-do_list/./src/script/Classes/inputsConfig.js?");

/***/ }),

/***/ "./src/script/index.js":
/*!*****************************!*\
  !*** ./src/script/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderTaskUI\": () => (/* binding */ renderTaskUI),\n/* harmony export */   \"userAuthorization\": () => (/* binding */ userAuthorization)\n/* harmony export */ });\n/* harmony import */ var _Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Classes/inputsConfig.js */ \"./src/script/Classes/inputsConfig.js\");\n/* harmony import */ var _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes/InputClass.js */ \"./src/script/Classes/InputClass.js\");\n/* harmony import */ var _Classes_FormClass_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes/FormClass.js */ \"./src/script/Classes/FormClass.js\");\n/* harmony import */ var _Classes_TaskClass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Classes/TaskClass.js */ \"./src/script/Classes/TaskClass.js\");\n/* harmony import */ var _style_main_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../style/main.css */ \"./src/style/main.css\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst userAuthorization = async () => {\r\n\r\n    const authForm = new _Classes_FormClass_js__WEBPACK_IMPORTED_MODULE_2__.Form({\r\n        inputEmail: new _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__.Input(_Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__.inputsConfig.email),\r\n        inputName: new _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__.Input(_Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__.inputsConfig.name),\r\n        inputPassword: new _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__.Input(_Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__.inputsConfig.password),\r\n        inputPassSwitch: new _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__.Input(_Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__.inputsConfig.inputPassSwitch),\r\n    });\r\n\r\n    \r\n    if (sessionStorage.getItem(\"authorizedUser\")) {\r\n        await authForm.sessionAuthorization();\r\n        renderTaskUI(authForm.formContainer);\r\n    } else {\r\n        authForm.renderLoginOrRegisterForm(authForm.formContainer);\r\n    }\r\n}\r\n\r\nconst renderTaskUI = (container) => {\r\n\r\n    const tasksUI = new _Classes_TaskClass_js__WEBPACK_IMPORTED_MODULE_3__.Task({\r\n        inputTaskName: new _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__.Input(_Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__.inputsConfig.taskName),\r\n        inputTaskDescription: new _Classes_InputClass_js__WEBPACK_IMPORTED_MODULE_1__.Input(_Classes_inputsConfig_js__WEBPACK_IMPORTED_MODULE_0__.inputsConfig.taskDescription),\r\n    });\r\n\r\n    tasksUI.renderTaskForm(container);\r\n}\r\n\r\nuserAuthorization();\n\n//# sourceURL=webpack://project_to-do_list/./src/script/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/script/index.js");
/******/ 	
/******/ })()
;